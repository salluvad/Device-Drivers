https://embetronicx.com/tutorials/linux/device-drivers/ioctl-tutorial-in-linux/

IOCTL is referred to as Input and Output Control, which is used to talk to device drivers.
The major use of this is in case of handling some specific operations of a device for which the kernel does not have a system call by default.

There are some steps involved in Implementing IOCTL in Linux Device Drivers-

Create IOCTL command in the driver
Write the IOCTL function in the driver
Create IOCTL command in a Userspace application
Use the IOCTL system call in a Userspace


1. Define the IOCTL command:

#define "ioctl name" __IOX("magic number","command number","argument type")

2. Write IOCTL Function in the Driver:
int  ioctl(struct inode *inode,struct file *file,unsigned int cmd,unsigned long arg)
Within the function “ioctl” we need to implement all the commands that we defined above
making the fops pointer “unlocked_ioctl” to point to our ioctl fun

3. Create IOCTL Command in a Userspace Application
#define WR_VALUE _IOW('a','a',int32_t*)
#define RD_VALUE _IOR('a','b',int32_t*)

4. Use IOCTL System Call in Userspace
long ioctl( "file descriptor","ioctl command","Arguments");



